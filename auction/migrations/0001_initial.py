# Generated by Django 5.1.7 on 2025-03-20 12:55

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='lot_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Lot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('starting_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('on_auction', 'На аукционе'), ('sold', 'Продано'), ('completed', 'Завершено')], max_length=20)),
                ('location', models.CharField(max_length=255)),
                ('images', models.ManyToManyField(blank=True, to='auction.image')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150)),
                ('telegram_id', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('role', models.CharField(choices=[('user', 'User'), ('admin', 'Admin'), ('superadmin', 'SuperAdmin'), ('support', 'Support')], default='user', max_length=20)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('successful_bids', models.IntegerField(default=0)),
                ('auto_bid_access', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='auction_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='auction_user_permissions_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Strike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auction.user')),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('lot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auction.lot')),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auction.user')),
            ],
        ),
        migrations.AddField(
            model_name='lot',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auction.user'),
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('target_admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints_received', to='auction.user')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auction.user')),
            ],
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('lot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auction.lot')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auction.user')),
            ],
        ),
    ]
